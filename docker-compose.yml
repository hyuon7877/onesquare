services:
  db:
    image: mariadb:10.6
    container_name: ${PROJECT_NAME}_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: ${TZ}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mariadb/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./docker/mariadb/my.cnf:/etc/mysql/conf.d/custom.cnf:ro
    ports:
      - "${DB_PORT}:3306"
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  web:
    build:
      context: .
      dockerfile: docker/django/Dockerfile
      args:
        UBUNTU_VERSION: ${UBUNTU_VERSION}
        PYTHON_VERSION: ${PYTHON_VERSION}
        PROJECT_NAME: ${PROJECT_NAME}
    container_name: ${PROJECT_NAME}_web
    restart: unless-stopped
    volumes:
      - ./src:/var/www/html/${PROJECT_NAME}
      - socket_volume:/var/www/html/${PROJECT_NAME}/run
      - ./docker/django/scripts:/scripts:ro
      # WSL2 성능 최적화
      - type: tmpfs
        target: /tmp
        tmpfs:
          size: 1G
    depends_on:
      db:
        condition: service_healthy
    environment:
      - PROJECT_NAME=${PROJECT_NAME}
      - DB_NAME=${MYSQL_DATABASE}
      - DB_USER=${MYSQL_USER}
      - DB_PASS=${MYSQL_PASSWORD}
      - DB_HOST=db
      - DB_PORT=3306
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - MAX_UPLOAD_SIZE=${MAX_UPLOAD_SIZE}
      - GUNICORN_TIMEOUT=${GUNICORN_TIMEOUT}
      - GUNICORN_WORKERS=${GUNICORN_WORKERS}
      - LANG=${LANG}
      - LC_ALL=${LC_ALL}
      - PYTHONIOENCODING=${PYTHONIOENCODING}
      - TZ=${TZ}
    networks:
      - app_network
    command: /scripts/entrypoint.sh

  nginx:
    image: nginx:mainline-alpine
    container_name: ${PROJECT_NAME}_nginx
    restart: unless-stopped
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/sites-enabled:/etc/nginx/sites-enabled:ro
      - ./src:/var/www/html/${PROJECT_NAME}:ro
      - socket_volume:/var/www/html/${PROJECT_NAME}/run
    ports:
      - "${WEB_PORT}:80"
    depends_on:
      - web
    environment:
      - NGINX_TIMEOUT=${NGINX_TIMEOUT}
      - MAX_UPLOAD_SIZE=${MAX_UPLOAD_SIZE}
      - TZ=${TZ}
    networks:
      - app_network

volumes:
  mysql_data:
  socket_volume:

networks:
  app_network:
    driver: bridge
