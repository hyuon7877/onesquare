services:
  web:
    build:
      context: .
      dockerfile: docker/django/Dockerfile
      args:
        UBUNTU_VERSION: ${UBUNTU_VERSION}
        PYTHON_VERSION: ${PYTHON_VERSION}
        PROJECT_NAME: ${PROJECT_NAME}
    container_name: ${PROJECT_NAME}_web
    restart: unless-stopped
    volumes:
      - ./src:/var/www/html/${PROJECT_NAME}
      - socket_volume:/var/www/html/${PROJECT_NAME}/run
      - ./docker/django/scripts:/scripts:ro
      # WSL2 성능 최적화
      - type: tmpfs
        target: /tmp
        tmpfs:
          size: 1G
    environment:
      - PROJECT_NAME=${PROJECT_NAME}
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - MAX_UPLOAD_SIZE=${MAX_UPLOAD_SIZE}
      - GUNICORN_TIMEOUT=${GUNICORN_TIMEOUT}
      - GUNICORN_WORKERS=${GUNICORN_WORKERS}
      - LANG=${LANG}
      - LC_ALL=${LC_ALL}
      - PYTHONIOENCODING=${PYTHONIOENCODING}
      - TZ=${TZ}
      # Notion API 설정
      - NOTION_API_KEY=${NOTION_API_KEY}
      - NOTION_DATABASE_ID=${NOTION_DATABASE_ID}
      # PWA 설정
      - USE_HTTPS=${USE_HTTPS}
    networks:
      - app_network
    command: /scripts/entrypoint.sh

  db:
    image: mysql:8.0
    container_name: ${PROJECT_NAME}_db
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=${PROJECT_NAME}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - TZ=${TZ}
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "${DB_PORT}:3306"
    networks:
      - app_network
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  nginx:
    image: nginx:mainline-alpine
    container_name: ${PROJECT_NAME}_nginx
    restart: unless-stopped
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/sites-enabled:/etc/nginx/sites-enabled:ro
      - ./src:/var/www/html/${PROJECT_NAME}:ro
      - socket_volume:/var/www/html/${PROJECT_NAME}/run
      # SSL 인증서 (개발용)
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    ports:
      - "${WEB_PORT}:80"
      - "${HTTPS_PORT}:443"
    depends_on:
      - web
      - db
    environment:
      - NGINX_TIMEOUT=${NGINX_TIMEOUT}
      - MAX_UPLOAD_SIZE=${MAX_UPLOAD_SIZE}
      - TZ=${TZ}
      - USE_HTTPS=${USE_HTTPS}
    networks:
      - app_network

volumes:
  socket_volume:
  db_data:

networks:
  app_network:
    driver: bridge