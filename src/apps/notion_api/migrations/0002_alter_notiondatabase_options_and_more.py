# Generated by Django 4.2.14 on 2025-09-04 14:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('notion_api', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='notiondatabase',
            options={'ordering': ['-created_at'], 'verbose_name': 'Notion 데이터베이스', 'verbose_name_plural': 'Notion 데이터베이스 목록'},
        ),
        migrations.AlterModelOptions(
            name='notionpage',
            options={'ordering': ['-notion_last_edited_time'], 'verbose_name': 'Notion 페이지', 'verbose_name_plural': 'Notion 페이지 목록'},
        ),
        migrations.AlterModelOptions(
            name='notionwebhook',
            options={'verbose_name': 'Notion 웹훅', 'verbose_name_plural': 'Notion 웹훅 목록'},
        ),
        migrations.AlterModelOptions(
            name='synchistory',
            options={'ordering': ['-started_at'], 'verbose_name': '동기화 기록', 'verbose_name_plural': '동기화 기록 목록'},
        ),
        migrations.AlterUniqueTogether(
            name='notionpage',
            unique_together=set(),
        ),
        migrations.AlterField(
            model_name='notiondatabase',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='notiondatabase',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='등록한 사용자', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='notiondatabase',
            name='database_type',
            field=models.CharField(choices=[('projects', '프로젝트'), ('tasks', '작업'), ('team_members', '팀원'), ('partners', '파트너'), ('reports', '리포트'), ('calendar', '캘린더'), ('custom', '커스텀')], default='custom', help_text='데이터베이스 유형', max_length=20),
        ),
        migrations.AlterField(
            model_name='notiondatabase',
            name='description',
            field=models.TextField(blank=True, help_text='데이터베이스 설명'),
        ),
        migrations.AlterField(
            model_name='notiondatabase',
            name='is_active',
            field=models.BooleanField(default=True, help_text='동기화 활성화 여부'),
        ),
        migrations.AlterField(
            model_name='notiondatabase',
            name='last_synced',
            field=models.DateTimeField(blank=True, help_text='마지막 동기화 시간', null=True),
        ),
        migrations.AlterField(
            model_name='notiondatabase',
            name='notion_id',
            field=models.CharField(help_text='Notion 데이터베이스 ID', max_length=36, unique=True),
        ),
        migrations.AlterField(
            model_name='notiondatabase',
            name='schema',
            field=models.JSONField(default=dict, help_text='Notion 데이터베이스 스키마 (속성 정의)'),
        ),
        migrations.AlterField(
            model_name='notiondatabase',
            name='sync_interval',
            field=models.IntegerField(default=300, help_text='동기화 간격 (초)'),
        ),
        migrations.AlterField(
            model_name='notiondatabase',
            name='title',
            field=models.CharField(help_text='데이터베이스 제목', max_length=255),
        ),
        migrations.AlterField(
            model_name='notiondatabase',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='notionpage',
            name='content_blocks',
            field=models.JSONField(default=list, help_text='페이지 내용 블록'),
        ),
        migrations.AlterField(
            model_name='notionpage',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='notionpage',
            name='database',
            field=models.ForeignKey(help_text='소속 데이터베이스', on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='notion_api.notiondatabase'),
        ),
        migrations.AlterField(
            model_name='notionpage',
            name='is_dirty',
            field=models.BooleanField(default=False, help_text='로컬에서 수정됨 (동기화 필요)'),
        ),
        migrations.AlterField(
            model_name='notionpage',
            name='local_hash',
            field=models.CharField(default='', help_text='로컬 데이터 해시', max_length=64),
        ),
        migrations.AlterField(
            model_name='notionpage',
            name='notion_created_by',
            field=models.CharField(default='', help_text='Notion 생성자 ID', max_length=36),
        ),
        migrations.AlterField(
            model_name='notionpage',
            name='notion_created_time',
            field=models.DateTimeField(help_text='Notion에서의 생성 시간'),
        ),
        migrations.AlterField(
            model_name='notionpage',
            name='notion_id',
            field=models.CharField(help_text='Notion 페이지 ID', max_length=36, unique=True),
        ),
        migrations.AlterField(
            model_name='notionpage',
            name='notion_last_edited_by',
            field=models.CharField(default='', help_text='Notion 마지막 수정자 ID', max_length=36),
        ),
        migrations.AlterField(
            model_name='notionpage',
            name='notion_last_edited_time',
            field=models.DateTimeField(help_text='Notion에서의 마지막 수정 시간'),
        ),
        migrations.AlterField(
            model_name='notionpage',
            name='properties',
            field=models.JSONField(default=dict, help_text='페이지 속성 데이터'),
        ),
        migrations.AlterField(
            model_name='notionpage',
            name='status',
            field=models.CharField(choices=[('active', '활성'), ('archived', '보관됨'), ('deleted', '삭제됨'), ('draft', '초안')], default='active', max_length=20),
        ),
        migrations.AlterField(
            model_name='notionpage',
            name='sync_conflicts',
            field=models.JSONField(default=list, help_text='동기화 충돌 정보'),
        ),
        migrations.AlterField(
            model_name='notionpage',
            name='title',
            field=models.CharField(help_text='페이지 제목', max_length=500),
        ),
        migrations.AlterField(
            model_name='notionpage',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='notionwebhook',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='notionwebhook',
            name='database',
            field=models.ForeignKey(help_text='연결된 데이터베이스', on_delete=django.db.models.deletion.CASCADE, related_name='webhooks', to='notion_api.notiondatabase'),
        ),
        migrations.AlterField(
            model_name='notionwebhook',
            name='event_types',
            field=models.JSONField(default=list, help_text='구독할 이벤트 타입'),
        ),
        migrations.AlterField(
            model_name='notionwebhook',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='notionwebhook',
            name='last_called',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='notionwebhook',
            name='total_calls',
            field=models.IntegerField(default=0, help_text='총 호출 수'),
        ),
        migrations.AlterField(
            model_name='notionwebhook',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='notionwebhook',
            name='webhook_id',
            field=models.CharField(help_text='웹훅 ID', max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='synchistory',
            name='completed_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='synchistory',
            name='database',
            field=models.ForeignKey(help_text='동기화 대상 데이터베이스', on_delete=django.db.models.deletion.CASCADE, related_name='sync_history', to='notion_api.notiondatabase'),
        ),
        migrations.AlterField(
            model_name='synchistory',
            name='duration',
            field=models.DurationField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='synchistory',
            name='error_details',
            field=models.JSONField(default=list, help_text='상세 오류 정보'),
        ),
        migrations.AlterField(
            model_name='synchistory',
            name='error_message',
            field=models.TextField(blank=True, default='', help_text='오류 메시지'),
        ),
        migrations.AlterField(
            model_name='synchistory',
            name='pages_created',
            field=models.IntegerField(default=0, help_text='생성된 페이지 수'),
        ),
        migrations.AlterField(
            model_name='synchistory',
            name='pages_deleted',
            field=models.IntegerField(default=0, help_text='삭제된 페이지 수'),
        ),
        migrations.AlterField(
            model_name='synchistory',
            name='pages_failed',
            field=models.IntegerField(default=0, help_text='실패한 페이지 수'),
        ),
        migrations.AlterField(
            model_name='synchistory',
            name='pages_updated',
            field=models.IntegerField(default=0, help_text='업데이트된 페이지 수'),
        ),
        migrations.AlterField(
            model_name='synchistory',
            name='started_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='synchistory',
            name='status',
            field=models.CharField(choices=[('started', '시작됨'), ('in_progress', '진행 중'), ('completed', '완료'), ('failed', '실패'), ('partial', '부분 완료')], default='started', help_text='동기화 상태', max_length=20),
        ),
        migrations.AlterField(
            model_name='synchistory',
            name='sync_id',
            field=models.UUIDField(default=uuid.uuid4, help_text='동기화 세션 ID', unique=True),
        ),
        migrations.AlterField(
            model_name='synchistory',
            name='sync_type',
            field=models.CharField(choices=[('full_sync', '전체 동기화'), ('incremental', '증분 동기화'), ('manual', '수동 동기화'), ('real_time', '실시간 동기화')], help_text='동기화 유형', max_length=20),
        ),
        migrations.AlterField(
            model_name='synchistory',
            name='total_pages',
            field=models.IntegerField(default=0, help_text='전체 페이지 수'),
        ),
        migrations.AlterField(
            model_name='synchistory',
            name='triggered_by',
            field=models.ForeignKey(blank=True, help_text='동기화를 실행한 사용자', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='notionpage',
            index=models.Index(fields=['database', 'status'], name='notion_api__databas_d89a0b_idx'),
        ),
        migrations.AddIndex(
            model_name='notionpage',
            index=models.Index(fields=['is_dirty'], name='notion_api__is_dirt_b1a6b4_idx'),
        ),
        migrations.AddIndex(
            model_name='notionpage',
            index=models.Index(fields=['notion_last_edited_time'], name='notion_api__notion__1359c3_idx'),
        ),
        migrations.AddIndex(
            model_name='synchistory',
            index=models.Index(fields=['database', 'status'], name='notion_api__databas_4ce19a_idx'),
        ),
        migrations.AddIndex(
            model_name='synchistory',
            index=models.Index(fields=['started_at'], name='notion_api__started_8453d2_idx'),
        ),
        migrations.AlterModelTable(
            name='notiondatabase',
            table=None,
        ),
        migrations.AlterModelTable(
            name='notionpage',
            table=None,
        ),
        migrations.AlterModelTable(
            name='notionwebhook',
            table=None,
        ),
        migrations.AlterModelTable(
            name='synchistory',
            table=None,
        ),
    ]
