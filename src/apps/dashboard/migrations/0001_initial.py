# Generated by Django 4.2.14 on 2025-09-05 09:21

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardDataCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cache_key', models.CharField(max_length=200, unique=True, verbose_name='캐시 키')),
                ('data_source', models.CharField(max_length=50, verbose_name='데이터 소스')),
                ('cached_data', models.JSONField(default=dict, verbose_name='캐시된 데이터')),
                ('metadata', models.JSONField(default=dict, verbose_name='메타데이터')),
                ('expires_at', models.DateTimeField(verbose_name='만료 시간')),
                ('hit_count', models.IntegerField(default=0, verbose_name='히트 수')),
                ('last_accessed', models.DateTimeField(auto_now=True, verbose_name='마지막 접근')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
            ],
            options={
                'verbose_name': '대시보드 데이터 캐시',
                'verbose_name_plural': '대시보드 데이터 캐시들',
                'db_table': 'dashboard_data_cache',
                'ordering': ['-last_accessed'],
            },
        ),
        migrations.CreateModel(
            name='DashboardNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='제목')),
                ('message', models.TextField(verbose_name='메시지')),
                ('notification_type', models.CharField(choices=[('info', '정보'), ('warning', '경고'), ('error', '오류'), ('success', '성공'), ('urgent', '긴급')], max_length=20, verbose_name='알림 유형')),
                ('priority', models.CharField(choices=[('low', '낮음'), ('medium', '보통'), ('high', '높음'), ('critical', '긴급')], default='medium', max_length=20, verbose_name='우선순위')),
                ('target_user_types', models.JSONField(default=list, verbose_name='대상 사용자 타입')),
                ('related_object_type', models.CharField(blank=True, max_length=50, verbose_name='관련 객체 타입')),
                ('related_object_id', models.CharField(blank=True, max_length=100, verbose_name='관련 객체 ID')),
                ('action_url', models.URLField(blank=True, verbose_name='액션 URL')),
                ('is_dismissible', models.BooleanField(default=True, verbose_name='닫기 가능')),
                ('auto_dismiss_seconds', models.IntegerField(blank=True, null=True, verbose_name='자동 닫기 시간(초)')),
                ('send_push', models.BooleanField(default=True, verbose_name='푸시 알림')),
                ('send_email', models.BooleanField(default=False, verbose_name='이메일 발송')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성화')),
                ('scheduled_at', models.DateTimeField(blank=True, null=True, verbose_name='예약 발송 시간')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='발송 시간')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='생성자')),
                ('target_users', models.ManyToManyField(related_name='dashboard_notifications', to=settings.AUTH_USER_MODEL, verbose_name='대상 사용자')),
            ],
            options={
                'verbose_name': '대시보드 알림',
                'verbose_name_plural': '대시보드 알림들',
                'db_table': 'dashboard_notification',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='위젯명')),
                ('title', models.CharField(max_length=200, verbose_name='표시 제목')),
                ('description', models.TextField(blank=True, verbose_name='설명')),
                ('widget_type', models.CharField(choices=[('chart_pie', '원형 차트'), ('chart_bar', '막대 차트'), ('chart_line', '선형 차트'), ('chart_donut', '도넛 차트'), ('stats_card', '통계 카드'), ('table', '데이터 테이블'), ('calendar', '캘린더 위젯'), ('notification', '알림 위젯'), ('progress', '진행률 위젯'), ('map', '지도 위젯'), ('list', '목록 위젯'), ('custom', '커스텀 위젯')], max_length=20, verbose_name='위젯 타입')),
                ('data_source', models.CharField(choices=[('revenue', '매출 데이터'), ('calendar', '캘린더 데이터'), ('partner_report', '파트너 리포트'), ('user_activity', '사용자 활동'), ('system_status', '시스템 상태'), ('notion_sync', 'Notion 동기화'), ('custom_api', '커스텀 API')], max_length=30, verbose_name='데이터 소스')),
                ('accessible_user_types', models.JSONField(default=list, help_text='["SUPER_ADMIN", "MANAGER"] 형태로 저장', verbose_name='접근 가능한 사용자 타입')),
                ('config', models.JSONField(default=dict, verbose_name='위젯 설정')),
                ('refresh_interval', models.IntegerField(default=300, verbose_name='새로고침 간격(초)')),
                ('default_width', models.IntegerField(default=4, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='기본 너비')),
                ('default_height', models.IntegerField(default=300, validators=[django.core.validators.MinValueValidator(100)], verbose_name='기본 높이')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성화')),
                ('is_customizable', models.BooleanField(default=True, verbose_name='사용자 커스터마이징 가능')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='생성자')),
            ],
            options={
                'verbose_name': '대시보드 위젯',
                'verbose_name_plural': '대시보드 위젯들',
                'db_table': 'dashboard_widget',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserDashboard',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('layout_type', models.CharField(choices=[('grid', '그리드 레이아웃'), ('masonry', '매이슨리 레이아웃'), ('fixed', '고정 레이아웃')], default='grid', max_length=20, verbose_name='레이아웃 타입')),
                ('theme', models.CharField(default='light', max_length=20, verbose_name='테마')),
                ('primary_color', models.CharField(default='#3788d8', max_length=7, verbose_name='기본 색상')),
                ('enable_push_notifications', models.BooleanField(default=True, verbose_name='푸시 알림 허용')),
                ('enable_email_notifications', models.BooleanField(default=True, verbose_name='이메일 알림 허용')),
                ('notification_frequency', models.IntegerField(default=60, verbose_name='알림 주기(분)')),
                ('auto_refresh', models.BooleanField(default=True, verbose_name='자동 새로고침')),
                ('refresh_interval', models.IntegerField(default=300, verbose_name='새로고침 간격(초)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_settings', to=settings.AUTH_USER_MODEL, verbose_name='사용자')),
            ],
            options={
                'verbose_name': '사용자 대시보드 설정',
                'verbose_name_plural': '사용자 대시보드 설정들',
                'db_table': 'user_dashboard',
            },
        ),
        migrations.CreateModel(
            name='UserWidgetSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_x', models.IntegerField(default=0, verbose_name='X 좌표')),
                ('position_y', models.IntegerField(default=0, verbose_name='Y 좌표')),
                ('width', models.IntegerField(default=4, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='너비')),
                ('height', models.IntegerField(default=300, validators=[django.core.validators.MinValueValidator(100)], verbose_name='높이')),
                ('custom_title', models.CharField(blank=True, max_length=200, verbose_name='커스텀 제목')),
                ('custom_config', models.JSONField(default=dict, verbose_name='커스텀 설정')),
                ('is_visible', models.BooleanField(default=True, verbose_name='표시 여부')),
                ('is_minimized', models.BooleanField(default=False, verbose_name='최소화 여부')),
                ('order', models.IntegerField(default=0, verbose_name='정렬 순서')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.userdashboard', verbose_name='대시보드')),
                ('widget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.dashboardwidget', verbose_name='위젯')),
            ],
            options={
                'verbose_name': '사용자 위젯 설정',
                'verbose_name_plural': '사용자 위젯 설정들',
                'db_table': 'user_widget_settings',
                'ordering': ['order', 'position_y', 'position_x'],
                'unique_together': {('dashboard', 'widget')},
            },
        ),
        migrations.AddField(
            model_name='userdashboard',
            name='widgets',
            field=models.ManyToManyField(related_name='user_dashboards', through='dashboard.UserWidgetSettings', to='dashboard.dashboardwidget', verbose_name='위젯들'),
        ),
        migrations.CreateModel(
            name='SystemHealthMetric',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metric_type', models.CharField(choices=[('cpu_usage', 'CPU 사용률'), ('memory_usage', '메모리 사용률'), ('disk_usage', '디스크 사용률'), ('response_time', '응답 시간'), ('error_rate', '오류율'), ('active_users', '활성 사용자 수'), ('notion_sync_status', 'Notion 동기화 상태'), ('database_connections', 'DB 연결 수')], max_length=30, verbose_name='메트릭 타입')),
                ('value', models.FloatField(verbose_name='값')),
                ('unit', models.CharField(default='%', max_length=20, verbose_name='단위')),
                ('warning_threshold', models.FloatField(blank=True, null=True, verbose_name='경고 임계값')),
                ('critical_threshold', models.FloatField(blank=True, null=True, verbose_name='긴급 임계값')),
                ('metadata', models.JSONField(default=dict, verbose_name='메타데이터')),
                ('recorded_at', models.DateTimeField(auto_now_add=True, verbose_name='기록 시간')),
            ],
            options={
                'verbose_name': '시스템 상태 메트릭',
                'verbose_name_plural': '시스템 상태 메트릭들',
                'db_table': 'system_health_metric',
                'ordering': ['-recorded_at'],
                'indexes': [models.Index(fields=['metric_type', '-recorded_at'], name='system_heal_metric__a2ff79_idx')],
            },
        ),
        migrations.CreateModel(
            name='NotificationReadStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_read', models.BooleanField(default=False, verbose_name='읽음 여부')),
                ('is_dismissed', models.BooleanField(default=False, verbose_name='닫음 여부')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='읽은 시간')),
                ('dismissed_at', models.DateTimeField(blank=True, null=True, verbose_name='닫은 시간')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.dashboardnotification', verbose_name='알림')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='사용자')),
            ],
            options={
                'verbose_name': '알림 읽음 상태',
                'verbose_name_plural': '알림 읽음 상태들',
                'db_table': 'notification_read_status',
                'unique_together': {('notification', 'user')},
            },
        ),
    ]
